<Activity mc:Ignorable="sap sap2010" x:Class="Laboratory_2_Second_Order_Eq_Result_Calculator" this:Laboratory_2_Second_Order_Eq_Result_Calculator.second_order_equation_elements="[new Int32(){0,0,0}]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="second_order_equation_elements" Type="InArgument(s:Int32[])" />
    <x:Property Name="second_order_equation_results" Type="InOutArgument(scg:List(x:Double))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1114.4,424</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Laboratory_2_Second_Order_Eq_Result_Calculator_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Laboratory_2_Second_Order_Eq_Result_Calculator" sap:VirtualizedContainerService.HintSize="449.6,276.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Double" Default="-1" Name="second_order_equation_result" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="'Clear the lists&#xD;&#xA;' Ensure that the list is initialized if it's not already&#xD;&#xA;If second_order_equation_results_invoked Is Nothing Then&#xD;&#xA;    second_order_equation_results_invoked = New List(Of Double)()&#xD;&#xA;Else&#xD;&#xA;    second_order_equation_results_invoked.Clear()&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;' Extract the coefficients a, b, c&#xD;&#xA;Dim a As Int32 = second_order_equation_elements_invoked(0)&#xD;&#xA;Dim b As Int32 = second_order_equation_elements_invoked(1)&#xD;&#xA;Dim c As Int32 = second_order_equation_elements_invoked(2)&#xD;&#xA;&#xD;&#xA;' Calculate the discriminant (delta)&#xD;&#xA;Dim delta As Double = b * b - 4 * a * c&#xD;&#xA;&#xD;&#xA;' Calculate the square root of the delta&#xD;&#xA;Dim sqrtDelta As Double = Math.Sqrt(delta)&#xD;&#xA;&#xD;&#xA;' Calculate the first result&#xD;&#xA;Dim x1 As Double = (-b + sqrtDelta) / (2 * a)&#xD;&#xA;second_order_equation_results_invoked.Add(x1)&#xD;&#xA;&#xD;&#xA;' Calculate the second result&#xD;&#xA;Dim x2 As Double = (-b - sqrtDelta) / (2 * a)&#xD;&#xA;&#xD;&#xA;' Add the second result only if it's different from the first result&#xD;&#xA;If x2 &lt;&gt; x1 Then&#xD;&#xA;    second_order_equation_results_invoked.Add(x2)&#xD;&#xA;End If" DisplayName="Calculate delta and insert the solutions in the list" sap:VirtualizedContainerService.HintSize="387.2,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="s:Int32[]" x:Key="second_order_equation_elements_invoked">
          <VisualBasicValue x:TypeArguments="s:Int32[]" ExpressionText="second_order_equation_elements" />
        </InArgument>
        <OutArgument x:TypeArguments="scg:List(x:Double)" x:Key="second_order_equation_results_invoked">
          <VisualBasicReference x:TypeArguments="scg:List(x:Double)" ExpressionText="second_order_equation_results" />
        </OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
  </Sequence>
</Activity>